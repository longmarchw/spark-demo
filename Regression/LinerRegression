//算法名称-线性回归(LinerRegression)
import cn.neucloud.dasuan.analysis.bean.LRBean
import cn.neucloud.dasuan.analysis.regression.DSLinearRegression
import cn.neucloud.viz.cn.neucloud.viz.analysis.Visualize
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.sql.{DataFrame, SQLContext}
import org.apache.spark.{SparkContext, SparkConf}
//数据准备
 val data: DataFrame = sqlContext.createDataFrame(Seq(
      (-5.6, Vectors.sparse(1, Array(0), Array(0.6))),
      (-5.8, Vectors.sparse(1, Array(0), Array(0.8)))
    )).toDF("label", "features")
val bean = new LRBean()
bean.setRegParam(0.3)
bean.setStandardization(true)
val lr = new DSLinearRegression()
var linearModel = lr.linearRegression(data, bean)
println("Coefficients: "
      + linearModel.coefficients + " Intercept: " + linearModel.intercept)
val predictArr = Array(0.5);
val result = lr.predict(linearModel, predictArr)
println(result)
